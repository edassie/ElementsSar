rm(list=ls(all=TRUE))
setwd("~/GitHub/ElementsSar")
#Load libraries
library(tidyr)
library(dplyr)
library(plyr)
library(ggplot2)
# original data for all metals (except those with all readings below LOD)
ES= read.csv("ElementsSar.csv", sep = ",")
# change from wide to long format
ES2 <- gather(ES, Element, Value, Al:Zn)
#Transformations
ES2$Index=as.factor(ES2$Index)
ES2$SiteN=as.factor (ES2$SiteN)
ES2$Element=as.factor(ES2$Element)
ES2$Year=as.factor(ES2$Year)
# Make new table with medians
ESM<-ddply(ES2, .(Sample, SiteN, Month, Year, Element),
summarise, Median= median(Value, na.rm=TRUE))
write.table(ESM, "Medians.csv", quote=F, sep = ",", row.names=F)
# Summary by metal
Resume <- ddply(ESM, c("Element"), function(d) {c(Median = median (d$Median),
min = min(d$Median),
max = max(d$Median))})
write.table(Resume, "Resume.csv", quote=F, sep = ",", row.names=F)
# Summary by metal by Site
Resume2 <- ddply(ESM, c("Element", "SiteN"), function(d) {c(N = length (d$Median),
Median = median (d$Median), min = min(d$Median),
max = max(d$Median))})
write.table(Resume2, "ResumeSite.csv", quote=F, sep = ",", row.names=F)
# For building plot with morphotypes
Resume3<-ddply(ES2, .(Sample, SiteN, Spp, Month, Year, Element),
summarise, Median= median(Value, na.rm=TRUE))
write.table(ES2, "Resume3.csv", quote=F, sep = ",", row.names=F)
# Code for figure 2
Sel<- Resume3[Resume3$Element=="As"| Resume3$Element=="Al"|Resume3$Element=="Ca"|
Resume3$Element=="Cl"|Resume3$Element=="K"|Resume3$Element=="Mg"|
Resume3$Element=="Mn"|Resume3$Element=="P"| Resume3$Element=="Rb"|
Resume3$Element=="S"|Resume3$Element=="Si"| Resume3$Element=="Sr"|
Resume3$Element=="Th"|Resume3$Element=="U",]
## define custom median function
plot.median <- function(x) {
m <- median(x)
c(y = m, ymin = m, ymax = m)
}
ggplot(Sel, aes(x=SiteN, y=Median, fill=Spp)) +
geom_dotplot(binaxis='y', stackdir='center', dotsize=3)+
labs(x = "Site", y ="Concentration (ppm DW)")+
facet_wrap(~Element, scales = "free", ncol = 3)+
theme_minimal()+
theme(legend.position = c(0.85,0.06),
axis.text=element_text(size=12),
axis.title.x = element_text(size=16, face="bold"),
axis.title.y = element_text (size=16, face="bold"),
strip.text.x = element_text(size = 14, colour = "red", face ="bold"))+
labs(fill='Species/Morphotype')+
stat_summary(fun.data="plot.median", geom="errorbar",
colour="black", width=0.7, size=1.5, mapping = aes(group = SiteN))
#Comparison between Sargassum forms (without Sargassum spp)
Spp<-ddply(ES2, .(SiteN, Sample, Spp, Element),
summarise, Median= median(Value, na.rm=TRUE))
Resume4 <- ddply(Spp, c("Spp", "Element"), function(d) {c(Median = median (d$Median),
min = min(d$Median),
max = max(d$Median))})
ElemSpp<-ddply(ES2, .(Sample, SiteN, Spp, Element),
summarise, Median= median(Value, na.rm=TRUE))
ElemSpp2=ElemSpp[ElemSpp$Spp=="Sflu III"| ElemSpp$Spp=="Snat I"|ElemSpp$Spp=="Snat VIII",]
write.table(ElemSpp2, "ElemSpp.csv", quote=F, sep = ",", row.names=F)
ElemSpp3= read.csv("ElemSpp.csv", sep = ",")
Al<- ElemSpp[ElemSpp$Element=="Al",]
As<- ElemSpp[ElemSpp$Element=="As",]
Ca<- ElemSpp[ElemSpp$Element=="Ca",]
Cl<- ElemSpp[ElemSpp$Element=="Cl",]
Cu<- ElemSpp[ElemSpp$Element=="Cu",]
Fe<- ElemSpp[ElemSpp$Element=="Fe",]
K<- ElemSpp[ElemSpp$Element=="K",]
Mg<- ElemSpp[ElemSpp$Element=="Mg",]
Mn<- ElemSpp[ElemSpp$Element=="Mn",]
Mo<- ElemSpp[ElemSpp$Element=="Mo",]
P<- ElemSpp[ElemSpp$Element=="P",]
Pb- ElemSpp[ElemSpp$Element=="Pb",]
Rb<- ElemSpp[ElemSpp$Element=="Rb",]
S<- ElemSpp[ElemSpp$Element=="S",]
Si<- ElemSpp[ElemSpp$Element=="Si",]
Sr<- ElemSpp[ElemSpp$Element=="Sr",]
Th<- ElemSpp[ElemSpp$Element=="Th",]
U<- ElemSpp[ElemSpp$Element=="U",]
V2<- ElemSpp[ElemSpp$Element=="V",]
Zn2<- ElemSpp[ElemSpp$Element=="Zn",]
# Kruskal-Wallis rank sum test (change element)
library (pgirmess)
kruskal.test(Al$Median~Al$Spp)
kruskalmc(Al$Median~ Al$Spp)
#Code for Figure 3 - Comparison among months for Puerto Morelos site
PM<- ESM[ESM$SiteN=="3",]
Month <- ddply(PM, .(Element,Month), summarise,
Median = median (Median))
library(reshape) # Convert to wide format
MonthWide <- reshape(Month,
timevar = "Month", # nombre de variable que quedemos quede separada
idvar = "Element", #nombre de todas las otras variables, menos la de interÃ©s (p.e. %)
direction = "wide")
write.table(MonthWide, "Month.csv", quote=F, sep = ",", row.names=F)
#Heatmap
HM= read.csv("MonthHM.csv", sep = ",")
str(HM)
HM2 <- HM %>% mutate_each_(funs(scale(.) %>% as.vector),
vars=c("Al","As", "Ca", "Cl", "K", "Mg", "Mn", "P", "Rb", "S", "Si", "Sr", "Th", "U"))
write.table(HM2, "Ztrans.csv", quote=F, sep = ",", row.names=F)
# Load Libraries
library(gplots)  # for heatmap.2
library(RColorBrewer)
# Obtain matrix
row.names(HM2) <- HM2$Date
HM2 <- HM2[, -1]
# make the heatmap
heatmap.2(as.matrix(HM2), Rowv = FALSE, Colv=FALSE,
col = colorRampPalette(c("gold", "darkred")), margins = c(5, 8),
trace = "none", density.info = "none", xlab = "Element", ylab = "Month+Year",
lhei = c(2, 6))
